---
import Tile from '../Tile.astro'
import { getEntryPath } from 'src/util/collection'
import type { ProcessedEntry } from 'src/util/collection'
import type { CollectionEntry } from 'astro:content'
import ShareButton from '../ShareButton.astro'

interface Props {
	thisPost: ProcessedEntry<'gig'>
	nextPost?: CollectionEntry<'gig'>
	prevPost?: CollectionEntry<'gig'>
}

const { thisPost, nextPost, prevPost } = Astro.props
---

<div class="wrapper">
	{
		prevPost && (
			<div class="nextPrevWrapper prev hideMobile">
				<div class="icon">{'>'}</div>
				<Tile
					title={prevPost.data.title}
					label={prevPost.data.date.toString()}
					containerHeight="100%"
					href={getEntryPath(prevPost.data.title, prevPost.collection)}
				/>
			</div>
		)
	}
	{
		nextPost ? (
			<div class="nextPrevWrapper next hideMobile">
				<div class="icon">{'<'}</div>
				<Tile
					title={nextPost.data.title}
					label={nextPost.data.date.toString()}
					containerHeight="100%"
					href={getEntryPath(nextPost.data.title, nextPost.collection)}
				/>
			</div>
		) : (
			<div class="label">LATEST GIG</div>
		)
	}
	<ShareButton
		shareData={{
			title: 'GIG MEDIA: ' + thisPost.entry.data.title,
			url: 'https://dunedinsound.com' + thisPost.extra.slug,
			description: `Photos, audio and video from ${thisPost.entry.data.title}.`
		}}
	/>
</div>

<style>
	.nextPrevWrapper {
		position: absolute;
		&.prev {
			right: -10vw;
		}
		&.next {
			left: -10vw;
		}
		z-index: 5;
		height: 100%;
		top: 0px;
		width: 20vw;
		opacity: 0.5;
		transition: all 300ms ease-in-out;
		display: flex;
		align-items: center;
		justify-content: center;
		.icon {
			position: absolute;
			z-index: 0;
			display: flex;
			align-items: center;
			justify-content: center;
			.prev {
				right: 10vw;
			}
			.next {
				left: 10vw;
			}
			height: 100%;
		}
		.tile {
			position: absolute;
			width: 100%;
			opacity: 0;
			transition: opacity 300ms ease-in-out;
		}
		&:hover {
			.prev {
				right: 0px;
				box-shadow: -6px 0px 12px rgba(0, 0, 0, 0.5);
			}
			.next {
				left: 0px;
				box-shadow: 6px 0px 12px rgba(0, 0, 0, 0.5);
			}
			opacity: 1;
			.tile {
				opacity: 1;
			}
		}
	}
	.label {
		position: absolute;
		font-weight: bold;
		left: -60px;
		background-color: white;
		color: black;
		top: 20px;
		width: 200px;
		text-align: center;
		transform: rotateZ(-40deg);
		font-size: 60%;
		@media (--xs) {
			left: -50px;
			top: 25px;
			font-size: 100%;
		}
	}
</style>
