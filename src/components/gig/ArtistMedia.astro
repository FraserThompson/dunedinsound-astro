---
/**
 * Displays all the images and videos for each artist in a gig.
 *
 * Props:
 *  - entry: The current entry.
 */
import type { ProcessedEntry } from 'src/util/collection'
import Divider from '../Divider.astro'
import ImageGallery from '../ImageGallery.astro'
import ImageGalleryLightbox from '../ImageGalleryLightbox'
import FlexGridContainer from '../FlexGridContainer.astro'
import LiteYoutube from '../LiteYoutube.astro'
import { theme } from 'src/Theme.css'

interface Props {
	entry: ProcessedEntry<'gig'>
}

const { entry } = Astro.props
const entryExtra = entry.extra
const entryData = entry.entry.data

// For the lightbox
const allImages = Object.values(entryExtra.artistImages).reduce((acc, images) => {
	return [...acc, ...images]
}, [])
---

{
	entryExtra.artists.map((artist, i) => (
		<div class="artist" id={artist.id}>
			<Divider
				href={`#${artist.id}`}
				color="black"
				backgroundColor="white"
				sticky={true}
				topMobile={theme.dimensions.headerHeightMobile}
			>
				{artist.data.title}
			</Divider>
			<FlexGridContainer grid={{ xs: 12, md: 6 }} maxWidth="1080px">
				{entryData.artists[i].vid?.map((vid) => (
					<LiteYoutube videoid={vid.link} loadAPI={true} />
				))}
			</FlexGridContainer>
			{entryExtra.artistImages[artist.id] && (
				<ImageGallery noLightbox={true} images={entryExtra.artistImages[artist.id]} />
			)}
		</div>
	))
}

<ImageGalleryLightbox title={entryData.title} images={allImages} client:load />
