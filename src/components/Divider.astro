---
/**
 * A clickable divider.
 * 
 * Props:
 *  - href: the href
 *  - color: override default text color
 *  - backgroundColor: override default background color
 *  - className: add a class
 *  - sticky: if true it will be sticky
 *  - stickyTop: 
 *  - smoothScroll: if true it will scroll smoothly to the anchor specified in the href, and not update the URL
 *  - zIndex: Override the default zIndex (5 for normal, 6 for sticky)
 *
 * @param param0
 * @returns
 */

import { dividerWrapper, dividerColor, dividerBackgroundColor, stickyTop, stickyTopMobile, dividerZIndex, dividerHeight, dividerHeightMobile, dividerMarginBottom } from './Divider.css'
import { assignInlineVars } from '@vanilla-extract/dynamic'

interface Props {
	href?: string
	color?: string
	backgroundColor?: string
	className?: string
	sticky?: boolean
	top?: string
	topMobile?: string
	smoothScroll?: boolean
	height?: string
	heightMobile?: string
	marginBottom?: string
	zIndex?: string
}

const { href, color, backgroundColor, className = '', sticky, top, topMobile, smoothScroll, height, heightMobile, marginBottom, zIndex } = Astro.props
---

<div
	class={`${dividerWrapper[sticky ? 'sticky' : 'normal']} ${className}`}
	style={assignInlineVars({
		[dividerColor]: color,
		[dividerBackgroundColor]: backgroundColor,
		[stickyTop]: top ? top : undefined,
		[stickyTopMobile]: topMobile ? topMobile : undefined,
		[dividerHeight]: height,
		[dividerHeightMobile]: heightMobile,
		[dividerMarginBottom]: marginBottom,
		[dividerZIndex]: zIndex
	})}
>
	{
		href && (
			<a class="dividerLink" href={href} data-smoothscroll={smoothScroll}>
				<slot />
			</a>
		)
	}
	{!href && <slot />}
</div>

<script>
	import { scrollTo } from 'src/util/helpers'
	const dividers = document.querySelectorAll<HTMLElement>('.dividerLink')
	dividers.forEach(
		(divider) => divider.dataset.smoothscroll && divider.addEventListener('click', (e: any) => scrollTo(e))
	)
</script>
