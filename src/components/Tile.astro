---
import BackgroundImage from './BackgroundImage.astro'
import type { ResponsiveImage } from 'src/util/image'
import {
	tileWrapper,
	tileInner,
	titleWrapper,
	tileContent,
	tileTitle,
	tileLabel,
	background,
	height,
	width,
	fontSize
} from './Tile.css'
import { assignInlineVars } from '@vanilla-extract/dynamic'

interface Props {
	href: string
	className?: string
	id?: string
	responsiveImage?: ResponsiveImage
	title?: string
	prefix?: string
	label?: string
	feature?: boolean
	backgroundColor?: string
	containerHeight?: string
	containerWidth?: string
	dataAttributes?: any
}

const {
	href,
	className,
	id,
	responsiveImage,
	title,
	prefix,
	label,
	feature,
	backgroundColor,
	containerHeight,
	containerWidth,
	dataAttributes
} = Astro.props
---

<div {...dataAttributes} class={`${tileWrapper[containerWidth ? 'fixedWidth' : 'noWidth']} ${className} tile`} id={id}>
	<div
		class={tileInner}
		style={assignInlineVars({
			[background]: backgroundColor,
			[height]: containerHeight,
			[width]: containerWidth
		})}
	>
		<a href={href} title={title} style={{ height: '100%', display: 'block' }}>
			{responsiveImage && <BackgroundImage responsiveImage={responsiveImage} />}
			<div class={titleWrapper}>
				<div class={tileContent}>
					{
						title && (
							<h3
								class={tileTitle}
								style={assignInlineVars({
									[fontSize]: feature ? '2em' : undefined
								})}
							>
								{prefix && <span style={{ fontWeight: 200 }}>{prefix}</span>}
								{title}
							</h3>
						)
					}
					{label && <h4 class={tileLabel}>{label}</h4>}
					<div style={{ marginTop: 'auto', textAlign: 'center' }}>
						<slot />
					</div>
				</div>
			</div>
		</a>
	</div>
</div>
