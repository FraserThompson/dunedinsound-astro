---
/**
 * Astro wrapper for lite YouTube Component which doesnt immediately load 
 * tonnes of Google rubbish. Also uses the YouTube API to grab the video title.
 */
interface Props {
	videoid: string
	loadAPI?: boolean
	autoload?: boolean
}

const { videoid, loadAPI, autoload } = Astro.props
---

<lite-youtube-toucher data-videoid={videoid}>
	<lite-youtube
		autoload={autoload}
		videoid={videoid}
		nocookie={'true'}
		posterquality="maxresdefault"
		params="enablejsapi=1&rel=0"></lite-youtube>
</lite-youtube-toucher>

{loadAPI && <script src="https://www.youtube.com/iframe_api" />}

<script>
	
	// Clientside import because of SSR issues with web components
	import('@justinribeiro/lite-youtube')

	// Wraps the element and just calls the youtube API to get the video title
	class LiteYoutubeToucher extends HTMLElement {
		APIKey = 'AIzaSyBUlBQysAAKfuSmm4Z92VBMAE9lli3zL58'
		videoid

		constructor() {
			super()
			this.videoid = this.getAttribute('data-videoid')
		}

		async connectedCallback() {
			let response
			try {
				response = await fetch(
					`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${this.videoid}&key=${this.APIKey}`
				)
			} catch (e) {
				return
			}
			const data = await response.json()
			if (data.items && data.items.length) {
				const title = data.items[0].snippet.title
				const el = this.querySelector<HTMLElement>('lite-youtube')
				el?.setAttribute('videotitle', title)
			}
		}

		disconnectedCallback() {}
	}

	customElements.define('lite-youtube-toucher', LiteYoutubeToucher)
</script>
