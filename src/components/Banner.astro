---
/**
 * A banner intended for the top of a page.
 * Props:
 *  - title (optional): Title displayed over background
 *  - height (optional): height of the banner
 *  - heightMobile (optional): height of banner on mobile
 *  - bottomMargin (optional): margin from bottom
 *  - bottomMarginMobile (optional): margin from bottom on mobile
 *  - hideBackgroundMobile (optional): if true the background image is hidden on mobile
 *  - responsiveImageSizes (optional): responsive image sizes
 *  - backgroundImage (optional): image behind everything
 *  - backgroundImageVertical (optional): image behind everything
 *
 * Slots:
 *  - title: content in the title bar
 *  - subtitle: content displayed under title
 *  - background: content displayed behind everything
 *  - customContent: arbitrary content displayed anywhere
 */
import type { ResponsiveImage } from 'src/util/ResponsiveImage'
import BackgroundImage from './BackgroundImage.astro'
import {
	BannerWrapper,
	BackgroundContent,
	CustomContent,
	BannerTitle,
	BannerSubtitle,
	bannerHeight,
	bannerHeightMobile,
	marginBottom,
	marginBottomMobile
} from './Banner.css'
import { assignInlineVars } from '@vanilla-extract/dynamic'
import type { ResponsiveImageSizes } from './Image2.astro'

interface Props {
	id?: string
	title?: string
	height?: string
	heightMobile?: string
	bottomMargin?: string
	bottomMarginMobile?: string
	hideBackgroundMobile?: boolean
	responsiveImageSizes?: keyof ResponsiveImageSizes
	backgroundImage?: ResponsiveImage
	backgroundImageVertical?: ResponsiveImage
}

const {
	title,
	id = '',
	height,
	heightMobile,
	responsiveImageSizes = 'full',
	bottomMargin,
	bottomMarginMobile,
	hideBackgroundMobile,
	backgroundImage,
	backgroundImageVertical
} = Astro.props

const hasSubtitle = Astro.slots.has('subtitle')
---

<div
	class={`${BannerWrapper} banner`}
	id={id}
	style={assignInlineVars({
		[bannerHeight]: height,
		[bannerHeightMobile]: heightMobile,
		[marginBottom]: bottomMargin,
		[marginBottomMobile]: bottomMarginMobile
	})}
>
	{
		title && (
			<div class={BannerTitle}>
				<h1 class="smaller" style={{ marginBottom: '0px', textAlign: 'left', color: 'white' }}>
					{title}
				</h1>
				<slot name="title" />
			</div>
		)
	}
	{
		hasSubtitle && (
			<div class={BannerSubtitle}>
				<slot name="subtitle" />
			</div>
		)
	}
	<div class={`${BackgroundContent} ${hideBackgroundMobile ? 'hideMobile' : ''}`}>
		<slot name="background">
			{
				backgroundImage && (
					<BackgroundImage
						responsiveImageSizes={responsiveImageSizes}
						responsiveImage={backgroundImage}
						verticalImage={backgroundImageVertical}
						loading="eager"
					/>
				)
			}
		</slot>
	</div>
	<slot name="customContent" />
</div>
