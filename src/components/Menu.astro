---
/**
 * A simple menu with links to hrefs.
 *
 * Props:
 *  - links: an array of MenuLink objects.
 *  - menuType (optional): how to display the menu, defaults to horizontal.
 *
 * Menu links:
 *  - can specify a title or an image. if both are present it will prefer the image.
 *  - also can use a number of preset icons.
 *  - sidebarOnActive (optional): If true, this link will open a sidebar on mobile when active.
 *    If 'partial', will only open a sidebar when partially, not fully, active.
 *
 * @param props
 * @returns
 */

import HomeIcon from '~icons/iconoir/home'
import InfoIcon from '~icons/iconoir/info-circle'
import { sidebarButtonWrapper } from './SidebarNav.css'
import { MenuLinkWrapper, MenuLi, MenuWrapper } from './Menu.css'
import { isPartiallyActive } from 'src/util/helpers'

type PresetIcons = 'home' | 'info'

export interface MenuLink {
	title?: string
	href: string
	image?: string
	id?: string
	class?: string
	icon?: PresetIcons
	sidebarOnActive?: true | false | 'partial'
}

interface Props {
	links: MenuLink[]
	menuType?: 'horizontal' | 'vertical' | 'sideways'
}

const currentPath = new URL(Astro.request.url).pathname

const { links, menuType = 'horizontal' } = Astro.props
---

<ul class={MenuWrapper[menuType]}>
	{
		links.map((link) => {
			const partiallyActive = isPartiallyActive(link.href, currentPath)
			const sidebarButtonClass =
				(link.sidebarOnActive === true && partiallyActive) ||
				(link.sidebarOnActive === 'partial' && isPartiallyActive(link.href, currentPath, true))
					? 'sidebar-button'
					: ''
			return (
				<li class={`${MenuLi[menuType]} ${link.class || ''}`}>
					<a
						class={`${MenuLinkWrapper[menuType]} ${partiallyActive ? 'active' : ''} ${sidebarButtonClass ? sidebarButtonWrapper['base'] : ''}`}
						href={sidebarButtonClass ? undefined : link.href}
						title={link.title}
						id={sidebarButtonClass || link.id}
					>
						{!link.image && !link.icon && link.title}
						{link.image && <img src={link.image} alt={link.title} />}
						{link.icon && link.icon === 'home' ? <HomeIcon /> : link.icon === 'info' ? <InfoIcon /> : ''}
					</a>
				</li>
			)
		})
	}
</ul>
