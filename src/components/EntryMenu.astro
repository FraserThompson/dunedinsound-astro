---
/**
 * A menu displaying all entries of a certain type.
 * Used on content by entry pages to aid navigation.
 *
 * Props:
 *  - collection: the collection to display entries from.
 *  - selected: the current entry. Will highlight it if supplied.
 */
import { loadAndFormatCollection } from 'src/util/collection'
import { MenuLi, MenuLinkWrapper, MenuWrapper } from 'src/components/Menu.css'
import { backButton } from 'src/components/gig/GigsMenu.css'
import ActiveIndicator from 'src/components/ActiveIndicator.astro'
import type { CollectionKey } from 'astro:content'
import ChevronLeftIcon from '~icons/bx/chevron-left'
import { theme } from 'src/Theme.css'

interface Props {
	collection: CollectionKey
	selected?: string
}

const { selected, collection } = Astro.props

const entries = await loadAndFormatCollection(collection)
---

{
	selected && (
		<a class={`showMobile flex ${backButton}`} href={`/${collection}s`}>
			<ChevronLeftIcon /> Go to {collection === 'blog' ? 'article' : collection}s home
		</a>
	)
}

<ul id="shuffle-menu" class={MenuWrapper['vertical']}>
	{
		entries.map((entry, i) => (
			<li
				data-title={entry.entry.data.title}
				data-active={'died' in entry.entry.data && entry.entry.data.died !== undefined ? 'false' : 'true'}
				class={`sidebar-item ${MenuLi['vertical']} ${entry.entry.id === selected ? 'active' : ''}`}
			>
				<a
					class={MenuLinkWrapper['vertical']}
					data-markerindex={i}
					href={selected ? entry.extra.absolutePath : undefined}
				>
					<span>
						<ActiveIndicator died={'died' in entry.entry.data ? entry.entry.data.died : undefined} hideText={true} />
					</span>
					{entry.entry.data.title}
					{'gigCount' in entry.extra && (
						<small style={{ color: theme.color.dullText, width: '1.2em', display: 'inline-block', float: "right", textAlign: "right" }}>
							{entry.extra.gigCount}
						</small>
					)}
				</a>
			</li>
		))
	}
</ul>

<script>
	import { maintainSidebarScrollPosition } from 'src/util/helpers'
	const collection = window.location.pathname.split('/')[1]
	maintainSidebarScrollPosition(collection)
</script>
