---
import TextContainer from 'src/components/TextContainer.astro'
import { type ProcessedEntry } from 'src/util/collection.ts'
import Banner from 'src/components/Banner.astro'
import ImageGallery from 'src/components/ImageGallery.astro'
import BlogSidebar from 'src/components/blog/BlogSidebar.astro'
import FlexGridContainer from 'src/components/FlexGridContainer.astro'
import GigTile from 'src/components/gig/GigTile.astro'

interface Props {
	entry: ProcessedEntry<'blog'>
}
const { entry } = Astro.props

const { Content, headings, remarkPluginFrontmatter } = await entry.entry.render()

const entryData = entry.entry.data
const entryExtra = entry.extra
---

{entryExtra.cover && <Banner backgroundImage={entryExtra.cover} title={entryData.title} />}
<div style={{ display: 'flex', maxWidth: '1600px', margin: '0 auto' }}>
	<BlogSidebar entry={entry} />
	<TextContainer featureMode={entryData.featureMode}>
		<Content />
	</TextContainer>
</div>
{entryData.gallery && entryExtra.images && <ImageGallery images={Object.values(entryExtra.images)} />}
<div class="padding">
	<hr />
	<ul>
		{
			entry.prev && (
				<li>
					<a href={entry.prev.slug} rel="prev">
						← {entry.prev.data.title}
					</a>
				</li>
			)
		}
		{
			entry.next && (
				<li>
					<a href={entry.next.slug} rel="next">
						{entry.next.data.title} →
					</a>
				</li>
			)
		}
	</ul>
	{!!entryExtra.relatedGigs.length && <h2>Related Gigs</h2>}
</div>
{
	!!entryExtra.relatedGigs.length && (
		<FlexGridContainer>
			{entryExtra.relatedGigs.map((entry) => (
				<GigTile gig={entry} />
			))}
		</FlexGridContainer>
	)
}
