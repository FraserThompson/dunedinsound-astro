---
import TextContainer from 'src/components/TextContainer.astro'
import { getEntryPath, type ProcessedEntry } from 'src/util/collection.ts'
import Banner from 'src/components/Banner.astro'
import BlogSidebar from 'src/components/blog/BlogSidebar.astro'
import FlexGridContainer from 'src/components/FlexGridContainer.astro'
import GigTile from 'src/components/gig/GigTile.astro'
import Player from 'src/components/gig/Player'
import Image from 'src/components/LightboxImage.astro'
import SidebarNav from 'src/components/SidebarNav.astro'
import ChevronLeftIcon from '~icons/bx/chevron-left'
import { backButton } from 'src/components/gig/GigsMenu.css'
import ImageGalleryLightbox from 'src/components/ImageGalleryLightbox.astro'
import ImageGallery from 'src/components/ImageGallery.astro'
import ShareButton from 'src/components/ShareButton.astro'
import { BlogTextContainer, BlogPageContainer } from './Blog.css'

interface Props {
	entry: ProcessedEntry<'blog'>
}
const { entry } = Astro.props

const { Content, headings } = await entry.entry.render()

const entryData = entry.entry.data
const entryExtra = entry.extra

---
{entryExtra.cover && <Banner backgroundImage={entryExtra.cover} backgroundImageVertical={entryExtra.coverVertical} title={entryData.title}>
<ShareButton
	style={{ position: 'absolute', left: '50%', transform: 'translate(-50%)' }}
	shareData={{
		title: 'ARTICLE: ' + entryData.title,
		url: 'https://dunedinsound.com' + entryExtra.slug,
		text: `${entryData.description}.`
	}}/>
</Banner>}
<div class={BlogPageContainer} id="overview">
	<BlogSidebar className="hideMobile" entry={entry} headings={headings}/>
	<div class={BlogTextContainer}>
		<TextContainer>
			<Content components={{ Player, Image }} />
		</TextContainer>
	</div>
</div>
<div class="showMobile">
	<SidebarNav customButton={true}>
		<BlogSidebar slot="sidebarMenu" entry={entry} headings={headings} />
		<a slot="sidebarSubheaderTopMobile" class={`showMobile flex ${backButton}`} href="/blog">
			<ChevronLeftIcon /> Go to articles home
		</a>
	</SidebarNav>
</div>
{entryData.gallery && entryExtra.images && <ImageGallery images={Object.values(entryExtra.images)} />}
<div class="padding">
	<hr />
	<ul>
	{
			entry.prev && (
				<li>
					<a href={getEntryPath(entry.prev.data.title, 'blog')} rel="prev">
						← {entry.prev.data.title}
					</a>
				</li>
			)
		}
		{
			entry.next && (
				<li>
					<a href={getEntryPath(entry.next.data.title, 'blog')} rel="next">
						{entry.next.data.title} →
					</a>
				</li>
			)
		}
	</ul>
	{!!entryExtra.relatedGigs.length && <h2>Related Gigs</h2>}
</div>
{
	!!entryExtra.relatedGigs.length && (
		<FlexGridContainer>
			{entryExtra.relatedGigs.map((entry) => (
				<GigTile gig={entry} />
			))}
		</FlexGridContainer>
	)
}
{entryExtra.images && <ImageGalleryLightbox />}
