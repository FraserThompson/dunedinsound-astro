---
import BaseLayout from './BaseLayout.astro'
import Banner from 'src/components/Banner.astro'
import type { ProcessedEntry } from 'src/util/collection.ts'
import BannerOverlay from 'src/components/gig/BannerOverlay.astro'
import ImageGallery from 'src/components/ImageGallery'
import Player from 'src/components/Player'
import PlayerContainer from 'src/components/PlayerContainer.astro'
import Divider from 'src/components/Divider'
import YoutubeResponsive from 'src/components/YoutubeResponsive'
import FlexGridContainer from 'src/components/FlexGridContainer'
import DropdownMenu from 'src/components/DropdownMenu'
import { socialLinksToMenuItems } from 'src/util/helpers.ts'

interface Props {
	entry: ProcessedEntry<'gig'>
}

const { entry } = Astro.props

const entryData = entry.entry.data
const entryExtra = entry.extra
---

<BaseLayout>
	<Banner id="top" title={entryData.title} backgroundImage={entryExtra.cover}>
		<h2 slot="subtitle">
			at{' '}
			{
				entryExtra.venue && (
					<a href={`/venues/${entryExtra.venue.id}`} class="highlighted">
						{entryExtra.venue.data.title}
					</a>
				)
			}
			<p>
				<small>{entryData.date.toLocaleDateString()}</small>
			</p>
		</h2>
		<BannerOverlay thisPost={entry} nextPost={entry.next} prevPost={entry.prev} slot="customContent" />
		<div>
			{entryExtra.artists.map((artist) => <a href={`#${artist.id}`}>{artist.data.title}</a>)}
		</div>
		{
			entryExtra.audio && (
				<PlayerContainer>
					<Player artistAudio={Object.values(entryExtra.audio)} client:load />
				</PlayerContainer>
			)
		}
	</Banner>
	<div>
		<DropdownMenu
			list={entryExtra.artists.map((artist) => ({
				hash: `${artist.id}`,
				title: artist.data.title,
				additionalLinks: [...socialLinksToMenuItems(artist.data.links), { href: `/artists/${artist.id}`, title: '>' }]
			}))}
			direction="down"
			client:load
		/>
		{
			entryExtra.artists.map((artist, i) => (
				<div class="artist" id={artist.id}>
					<Divider href={`#${artist.id}`} color="black" backgroundColor="white" sticky={true}>
						{artist.data.title}
					</Divider>
					<FlexGridContainer xs={12} sm={6} md={6} lg={6} maxWidth="1080px">
						{entryData.artists[i].vid?.map((vid, i) => (
							<YoutubeResponsive videoId={vid.link} client:load />
						))}
					</FlexGridContainer>
					{entryExtra.images[artist.id] && (
						<ImageGallery title={entryData.title} images={entryExtra.images[artist.id]} client:load />
					)}
				</div>
			))
		}
	</div>

	<style>
		h1,
		h2 {
			color: white;
		}
	</style>
</BaseLayout>

<script>
	import browserHistory from 'src/util/history.ts'

	// Add the intersectionObserver which highlights the artist they're on in the menu
	const artistElements = document.querySelectorAll('.artist')

	const options = {
		rootMargin: '0px 0px -97%'
	}

	const callback = (entries: IntersectionObserverEntry[]) => {
		if (location.search) return

		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				const el = entry.target
				browserHistory?.replace({
					hash: '#' + el.id
				})
			} else {
				const bannerHeight = document.querySelector('.banner')?.clientHeight || 0
				if (window.pageYOffset < bannerHeight) {
					browserHistory?.replace({
						hash: ''
					})
				}
			}
		})
	}

	const observer = new IntersectionObserver(callback, options)
	artistElements.forEach((el) => observer.observe(el))
</script>
