---
import Banner from 'src/components/Banner.astro'
import type { ProcessedEntry } from 'src/util/collection.ts'
import ImageGallery from 'src/components/ImageGallery'
import Player from 'src/components/gig/Player'
import PlayerContainer from 'src/components/gig/PlayerContainer.astro'
import MapIcon from '~icons/bx/map'
import Divider from 'src/components/Divider'
import YoutubeResponsive from 'src/components/YoutubeResponsive'
import FlexGridContainer from 'src/components/FlexGridContainer'
import DropdownMenu from 'src/components/DropdownMenu'
import { socialLinksToMenuItems } from 'src/util/helpers.ts'
import ShareButton from 'src/components/ShareButton.astro'

interface Props {
	entry: ProcessedEntry<'gig'>
}

const { entry } = Astro.props

const entryData = entry.entry.data
const entryExtra = entry.extra
---

<Banner id="top" title={entryData.title} backgroundImage={entryExtra.cover}>
	<h3>
		{entryData.date.toLocaleDateString()}
		{
			entryExtra.venue && (
				<a href={`/venues/${entryExtra.venue.id}`} class="highlighted">
					<MapIcon />
					{entryExtra.venue.data.title}
				</a>
			)
		}
	</h3>
	{
		entryExtra.audio && (
			<PlayerContainer>
				<Player artistAudio={Object.values(entryExtra.audio)} client:load />
			</PlayerContainer>
		)
	}
	<div style={{ position: 'absolute', bottom: 0 }} slot="customContent">
		<ShareButton
			shareData={{
				title: 'GIG MEDIA: ' + entryData.title,
				url: 'https://dunedinsound.com' + entryExtra.slug,
				description: `Photos, audio and video from ${entryData.title}.`
			}}
		/>
	</div>
</Banner>
<div>
	<DropdownMenu
		list={entryExtra.artists.map((artist) => ({
			hash: `${artist.id}`,
			title: artist.data.title,
			additionalLinks: [...socialLinksToMenuItems(artist.data.links), { href: `/artists/${artist.id}`, title: '>' }]
		}))}
		direction="down"
		client:load
	/>
	{
		entryExtra.artists.map((artist, i) => (
			<div class="artist" id={artist.id}>
				<Divider href={`#${artist.id}`} color="black" backgroundColor="white" sticky={true}>
					{artist.data.title}
				</Divider>
				<FlexGridContainer xs={12} sm={6} md={6} lg={6} maxWidth="1080px">
					{entryData.artists[i].vid?.map((vid, i) => (
						<YoutubeResponsive videoId={vid.link} client:load />
					))}
				</FlexGridContainer>
				{entryExtra.images[artist.id] && (
					<ImageGallery title={entryData.title} images={entryExtra.images[artist.id]} client:load />
				)}
			</div>
		))
	}
</div>

<script>
	import browserHistory from 'src/util/history.ts'

	// Add the intersectionObserver which highlights the artist they're on in the menu
	const artistElements = document.querySelectorAll('.artist')

	const options = {
		rootMargin: '0px 0px -97%'
	}

	const callback = (entries: IntersectionObserverEntry[]) => {
		if (location.search) return

		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				const el = entry.target
				browserHistory?.replace({
					hash: '#' + el.id
				})
			} else {
				const bannerHeight = document.querySelector('.banner')?.clientHeight || 0
				if (window.pageYOffset < bannerHeight) {
					browserHistory?.replace({
						hash: ''
					})
				}
			}
		})
	}

	const observer = new IntersectionObserver(callback, options)
	artistElements.forEach((el) => observer.observe(el))
</script>
