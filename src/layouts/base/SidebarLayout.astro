---
/**
 * A layout with a sidebar. Mostly a wrapper for SidebarNav.
 * Makes things easier by automatically doing top and bottom margins.
 *
 * Props:
 *  - hideFooter: See BaseLayout
 *  - poo: SEO gubbins
 *
 * Slots:
 *  - sidebarMenu: See SidebarNav
 *  - sidebarFixed: See SidebarNav
 *  - content: See SidebarNav
 *  - subheaderTop: See SubheadersLayout
 *  - subheaderTopMobile: See SubheadersLayout
 *  - subheaderTopDesktop: See SubheadersLayout
 *  - subheaderBottomMobile: See SubheadersLayout
 */
import { theme } from 'src/Theme.css'
import BaseLayout from '../base/BaseLayout.astro'
import SidebarNav from 'src/components/SidebarNav.astro'
import type { Poo } from 'src/components/SEO.astro'
import { WithTopSubheader, WithBottomSubheaderMobile, Subheader } from 'src/components/UtilClasses.css'

interface Props {
	hideFooter?: boolean
	poo: Poo
}

const { hideFooter, poo } = Astro.props

const hasSubheaderTop = Astro.slots.has('subheaderTop')
const hasSubheaderTopMobile = Astro.slots.has('subheaderTopMobile')
const hasSubheaderTopDesktop = Astro.slots.has('subheaderTopDesktop')
const hasSubheaderBottomMobile = Astro.slots.has('subheaderBottomMobile')
const hasSidebarSubheaderBottomMobile = Astro.slots.has('sidebarSubheaderBottomMobile')
const hasSidebarSubheaderTopMobile = Astro.slots.has('sidebarSubheaderTopMobile')
---

<BaseLayout
	className=`${hasSubheaderTop && WithTopSubheader} ${hasSubheaderBottomMobile && WithBottomSubheaderMobile}`
	hideFooter={hideFooter}
	poo={poo}
>
	{
		hasSubheaderTop && (
			<div class={`${Subheader['top']}`}>
				<slot name="subheaderTop" />
			</div>
		)
	}
	{
		hasSubheaderTopMobile && (
			<div class={`${Subheader['topMobile']}`}>
				<slot name="subheaderTopMobile" />
			</div>
		)
	}
	{
		hasSubheaderTopDesktop && (
			<div class={`${Subheader['topDesktop']}`}>
				<slot name="subheaderTopDesktop" />
			</div>
		)
	}
	<SidebarNav
		top={hasSubheaderTopDesktop || hasSubheaderTop ? theme.dimensions.subheaderHeight : undefined}
		topMobile={hasSubheaderTopMobile || hasSubheaderTop ? theme.dimensions.headerHeightMobile : undefined}
		bottomMobile={hasSubheaderBottomMobile ? theme.dimensions.headerHeightMobile : undefined}
		customButton={true}
	>
		<slot name="sidebarMenu" slot="sidebarMenu" />
		<slot
			name="sidebarSubheaderBottomMobile"
			slot={`${hasSidebarSubheaderBottomMobile && 'sidebarSubheaderBottomMobile'}`}
		/>
		<slot name="sidebarSubheaderTopMobile" slot={`${hasSidebarSubheaderTopMobile && 'sidebarSubheaderTopMobile'}`} />
		<slot name="content" slot="content" />
	</SidebarNav>

	{
		hasSubheaderBottomMobile && (
			<div class={`${Subheader['bottomMobile']} showMobile`}>
				<slot name="subheaderBottomMobile" />
			</div>
		)
	}
</BaseLayout>
