---
/**
 * A layout for collection entries eg. Venues, Artists.
 *
 * Has a searchable sidebar for entry navigation in that collection, and
 * the page content is the content associated with that entry eg. gigs, articles.
 *
 * Props:
 *  - entry: The entry.
 *
 * Slots:
 *  - banner: Content to go in the banner at the top.
 */
import EntryMenu from 'src/components/EntryMenu.astro'
import SearchBox from 'src/components/SearchBox.astro'
import ShuffleFilters from 'src/components/ShuffleFilters.astro'
import ContentByEntry from '../../components/ContentByEntry.astro'
import type { ProcessedEntry } from 'src/util/collection'
import SidebarLayout from './SidebarLayout.astro'
import ChevronLeftIcon from '~icons/bx/chevron-left'
import { backButton } from 'src/components/gig/GigsMenu.css'

interface Props {
	entry: ProcessedEntry<'artist'> | ProcessedEntry<'venue'> | ProcessedEntry<'series'>
}

const { entry } = Astro.props
const collection = entry.entry.collection

const entryData = entry.entry.data
const entryExtra = entry.extra

const hasBanner = Astro.slots.has('banner')
---

<SidebarLayout
	hasSidebarSubheaderBottomMobile={true}
	poo={{
		title: entryData.title,
		collection: entry.entry.collection,
		description: entryExtra.metaDescription,
		image: entryExtra.cover?.src,
		date: 'date' in entryData ? entryData.date?.toISOString() : undefined
	}}
>
	<ShuffleFilters slot="subheaderTopDesktop">
		<SearchBox placeholder=`Filter ${collection}s` className="fixedBottomMobile openWithSidebar" />
	</ShuffleFilters>
	<a slot="sidebarSubheaderTopMobile" class={`showMobile flex ${backButton}`} href=`/${collection}s`>
		<ChevronLeftIcon /> Go to ${collection}s home
	</a>
	<EntryMenu slot="sidebarMenu" collection={collection} selected={entry.entry.id} transition:persist />
	<ContentByEntry entry={entry} slot="content">
		<slot name="banner" slot={hasBanner ? 'banner' : ''} />
	</ContentByEntry>
</SidebarLayout>
