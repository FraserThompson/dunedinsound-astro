---
import ContentByEntry from 'src/layouts/ContentByEntry.astro'
import { loadAndFormatCollection } from 'src/util/collection.ts'
import Map from 'src/components/venue/Map.astro'
import SidebarNav from 'src/components/SidebarNav.astro'
import BaseLayout from 'src/layouts/BaseLayout.astro'
import EntryMenu from 'src/components/EntryMenu.astro'
import ShuffleFilters from 'src/components/ShuffleFilters.astro'
import SearchBox from 'src/components/SearchBox.astro'
import { Subheader } from 'src/components/UtilClasses.css'
import { theme } from 'src/Theme.css'

export async function getStaticPaths() {
	const artistEntries = await loadAndFormatCollection('venue')
	return artistEntries.map((entry) => ({
		params: { slug: entry.extra.slug },
		props: {
			entry
		}
	}))
}

const { entry } = Astro.props
const collection = entry.entry.collection
---

<BaseLayout>
	<SidebarNav scrollContext={collection}>
		<div slot="sidebarFixed" class={`${Subheader['sidebarTopAndBottom']}`}>
			<ShuffleFilters itemselector=".sidebar-item" boardselector="#sidebar-menu">
				<SearchBox placeholder="Search venues" />
			</ShuffleFilters>
		</div>
		<EntryMenu collection={collection} slot="sidebarMenu" selected={entry.entry.id} />
		<ContentByEntry entry={entry} slot="content">
			<Map
				markers={[{ coords: [entry.entry.data.lng, entry.entry.data.lat] }]}
				center={[entry.entry.data.lng, entry.entry.data.lat]}
				zoom="16"
				nointeract={true}
			/>
		</ContentByEntry>
	</SidebarNav>
</BaseLayout>
