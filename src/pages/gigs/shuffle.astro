---
import ShuffleFilters from 'src/components/ShuffleFilters.astro'
import { loadAndFormatCollection } from 'src/util/collection'
import GigsShuffle from 'src/components/gig/GigsShuffle.tsx'
import SubheadersLayout from 'src/layouts/base/SubheadersLayout.astro'
import fs from 'fs-extra'

const gigs = await loadAndFormatCollection('gig')

/**
 * This is somewhat insane.
 *
 * Basically since we're serving this up as a big blob to the client,
 * we want to remove all fields we don't need.
 * This brings it down from like 3mb to like 600kb.
 *
 * Downside is it breaks type safety.
 *
 * Maybe there's a better way to do this statically, not sure.
 */
const minimalGigs = JSON.parse(JSON.stringify(gigs)).map((gig: any) => {
	const minimalArtists = gig.extra.artists.map((artist: any) => {
		delete artist.entry.collection
		delete artist.entry.data.date
		delete artist.entry.data.description
		delete artist.entry.data.died
		delete artist.extra.lastGig
		delete artist.extra.cover
		delete artist.extra.images
		delete artist.extra.metaDescription
		return artist
	})
	delete gig.extra.images
	delete gig.extra.cover
	delete gig.extra.metaDescription
	delete gig.next
	delete gig.prev
	delete gig.entry.collection
	delete gig.entry.data.description
	delete gig.entry.data.intro
	delete gig.extra.venue.data.date
	delete gig.extra.venue.data.description
	delete gig.extra.venue.data.links
	delete gig.extra.venue.collection
	delete gig.extra.venue.data.lat
	delete gig.extra.venue.data.lng
	const minimalGig = {
		entry: gig.entry,
		extra: { ...gig.extra, artistImages: [], artists: minimalArtists }
	}
	return minimalGig
})

const gigsJSON = JSON.stringify(minimalGigs)

const path = 'public/gigs.json'
fs.writeFileSync(path, gigsJSON)
---

<SubheadersLayout hideFooter={true} poo={{ title: 'Gig Jukebox' }}>
	<ShuffleFilters slot="subheaderTop" itemselector=".tile" boardselector="#gigs">
		<div style={{ marginLeft: 'auto' }}>
			<span>Mode: </span>
			<div class="buttonGroup">
				<a href="/gigs">
					<button>Timeline</button>
				</a>
				<a href="/gigs/shuffle">
					<button class={'active'}>Shuffle</button>
				</a>
			</div>
		</div>
	</ShuffleFilters>
	<GigsShuffle client:load />
</SubheadersLayout>

<script>
	document.addEventListener('astro:page-load', (ev) => {
		// We use the vanilla YouTube API in this section coz its quicker
		function onPlayerReady(event: any) {
			event.target.playVideo()
		}

		// @ts-ignore
		window.player = null

		// @ts-ignore
		window.onYouTubeIframeAPIReady = () => {
			// @ts-ignore
			window.player = new YT.Player('player', {
				events: {
					onReady: onPlayerReady
				}
			})
		}
	})
</script>
