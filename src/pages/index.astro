---
import BaseLayout from '../layouts/BaseLayout.astro'
import { loadAndFormatCollection, type ProcessedEntry } from 'src/util/collection'
import Tile from 'src/components/Tile.astro'
import { theme } from 'src/Theme.css'
import GigTile from 'src/components/gig/GigTile.astro'
import FlexGridContainer from 'src/components/FlexGridContainer'
import GridContainer from 'src/components/GridContainer'
import { gridChild } from 'src/components/GridContainer.css'

const gigs = await loadAndFormatCollection('gig')
const blogs = await loadAndFormatCollection('blog')

// Combine gigs and blogs and sorts them by date
const posts = [...gigs, ...blogs]
const combinedPosts = posts.sort((a, b) => {
	return new Date(a.entry.data.date) > new Date(b.entry.data.date) ? -1 : 1
})

// So we can display the latest gig seperately
const latestGigIndex = combinedPosts.findIndex((post) => post.entry.collection === 'gig')
const latestGig = combinedPosts[latestGigIndex] as ProcessedEntry<'gig'>
combinedPosts.splice(latestGigIndex, 1)
---

<BaseLayout>
	<GridContainer>
		<div class="featured-gig">
			<GigTile containerHeight="100%" gig={latestGig} />
		</div>
		<div class="two-side-gigs">
			{
				combinedPosts
					.slice(0, 2)
					.map((post) =>
						post.entry.collection === 'gig' ? (
							<GigTile gig={post as ProcessedEntry<'gig'>} />
						) : (
							<Tile title={post.entry.data.title} href={post.extra.absolutePath} responsiveImage={post.extra.cover} />
						)
					)
			}
		</div>
		<div class="everything-else">
			<GridContainer xs={12} sm={6} md={4} lg={4}>
				{
					combinedPosts
						.slice(2, 8)
						.map((post) =>
							post.entry.collection === 'gig' ? (
								<GigTile className={gridChild} gig={post as ProcessedEntry<'gig'>} />
							) : (
								<Tile
									className={gridChild}
									title={post.entry.data.title}
									href={post.extra.absolutePath}
									responsiveImage={post.extra.cover}
								/>
							)
						)
				}
			</GridContainer>
		</div>
	</GridContainer>
	<FlexGridContainer xs={6} sm={6} md={6} lg={6}>
		<Tile
			containerHeight={theme.dimensions.headerHeightWithSubheader}
			href="/gigs"
			backgroundColor={theme.color.foreground}
		>
			<h3 class="center">More Gigs</h3>
		</Tile>
		<Tile
			containerHeight={theme.dimensions.headerHeightWithSubheader}
			href="/blog"
			backgroundColor={theme.color.secondary}
		>
			<h3 class="center">More Articles</h3>
		</Tile>
	</FlexGridContainer>
</BaseLayout>

<style>
	.featured-gig {
		grid-column: span 12;
	}
	.two-side-gigs {
		grid-column: span 12;
	}
	.everything-else {
		grid-column: span 12;
	}
	@media (--md) {
		.featured-gig {
			grid-column: span 8;
		}
		.two-side-gigs {
			grid-column: span 4;
		}
		.everything-else {
			grid-column: span 12;
		}
	}
</style>
